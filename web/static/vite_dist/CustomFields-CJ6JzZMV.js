import{_ as H}from"./DataTable-vHTsgTi6.js";import{_ as O}from"./ModalForm-DCJoVv1E.js";import{_ as x}from"./index-CD5urVsR.js";import{u as $}from"./usePlayerStore-KLtIIp-S.js";import{l as F}from"./lodash-Bdl6ys83.js";import{_ as R}from"./FormGroupSelect-DSNeFZce.js";import{r as S}from"./index-CSh-MSYs.js";import{u as I}from"./useVuelidateOnFormTab-DDZqQ533.js";import{d as v,a4 as U,L as P,c as E,b as M,o as k,g as a,u as e,w as r,i as D,t as u,j as y,h as q,K as L,e as b,F as j}from"./vue-B-dHMJBO.js";import{u as K}from"./useBaseEditModal-sDXNj8zk.js";import{u as z}from"./useHasDatatable-DPFcIMM0.js";import{u as G,_ as J}from"./AddButton-mzslCaiE.js";import{u as Q}from"./useConfirmAndDelete-ultb9O-u.js";import{_ as W}from"./CardPage-0fdasE1K.js";import{a as X}from"./router-CjgRDsAC.js";import"./icons-Yf7pfv1X.js";import"./FormMultiCheck-C8kU6V99.js";import"./FormCheckbox-CBrIHDuX.js";import"./useOptionalStorage-BvRWWVwv.js";import"./index-DXvg9C8z.js";import"./InvisibleSubmitButton-DW6QYji6.js";import"./_plugin-vue_export-helper-DlAUqK2U.js";import"./useSlotsExcept-ZKe4NxAj.js";import"./useHasModal-By0OKlXq.js";import"./bootstrap.esm-BZy605kZ.js";import"./Loading-B4WK-6A0.js";import"./useFormField-CS-SOlLc.js";import"./FormGroup-DZPf8gKm.js";import"./lodash-BwctMegf.js";import"./useVuelidateOnForm-BP2H-zhB.js";import"./mergeExisting-D7dGFTzO.js";import"./useDialog-BB0zrQKD.js";import"./InfoCard-D6xe4CFe.js";const Y={class:"row g-3"},Z=v({__name:"Form",props:U({autoAssignTypes:{}},{form:{required:!0},formModifiers:{}}),emits:["update:form"],setup(m){const c=m,d=P(m,"form"),{v$:t}=I(d,{name:{required:S},short_name:{},auto_assign:{}},{name:"",short_name:"",auto_assign:""}),{$gettext:s}=$(),i=E(()=>{const o=[{text:s("Disable"),value:""}];return F.forEach(c.autoAssignTypes,(l,p)=>{o.push({text:l,value:p})}),o});return(o,l)=>(k(),M("div",Y,[a(x,{id:"edit_form_name",class:"col-md-6",field:e(t).name,label:e(s)("Field Name"),description:e(s)("This will be used as the label when editing individual songs, and will show in API results.")},null,8,["field","label","description"]),a(x,{id:"edit_form_short_name",class:"col-md-6",field:e(t).short_name,label:e(s)("Programmatic Name")},{description:r(()=>[D(u(e(s)('Optionally specify an API-friendly name, such as "field_name". Leave this field blank to automatically create one based on the name.')),1)]),_:1},8,["field","label"]),a(R,{id:"edit_form_auto_assign",class:"col-md-6",field:e(t).auto_assign,label:e(s)("Automatically Set from ID3v2 Value"),options:i.value,description:e(s)("Optionally select an ID3v2 metadata field that, if present, will be used to set this field's value.")},null,8,["field","label","options","description"])]))}}),ee=v({__name:"EditModal",props:{autoAssignTypes:{},createUrl:{}},emits:["relist"],setup(m,{expose:c,emit:d}){const t=m,s=d,i=y("$modal"),{loading:o,error:l,isEditMode:p,form:f,v$:g,clearContents:_,create:A,edit:n,doSubmit:h,close:w}=K(t,s,i,{},{}),{$gettext:C}=$(),N=E(()=>p.value?C("Edit Custom Field"):C("Add Custom Field"));return c({create:A,edit:n,close:w}),(V,T)=>(k(),q(O,{ref_key:"$modal",ref:i,loading:e(o),title:N.value,error:e(l),"disable-save-button":e(g).$invalid,onSubmit:e(h),onHidden:e(_)},{default:r(()=>[a(Z,{form:e(f),"onUpdate:form":T[0]||(T[0]=B=>L(f)?f.value=B:null),"auto-assign-types":V.autoAssignTypes},null,8,["form","auto-assign-types"])]),_:1},8,["loading","title","error","disable-save-button","onSubmit","onHidden"]))}}),te={class:"card-text"},se={class:"btn-group btn-group-sm"},oe=["onClick"],ae=["onClick"],Se=v({__name:"CustomFields",props:{autoAssignTypes:{}},setup(m){const c=m,d=X("/admin/custom_fields"),{$gettext:t}=$(),s=[{key:"name",isRowHeader:!0,label:t("Field Name"),sortable:!1},{key:"auto_assign",label:t("Auto-Assign Value"),sortable:!1,formatter:_=>F.get(c.autoAssignTypes,_,t("None"))},{key:"actions",label:t("Actions"),sortable:!1,class:"shrink"}],i=y("$dataTable"),{relist:o}=z(i),l=y("$editModal"),{doCreate:p,doEdit:f}=G(l),{doDelete:g}=Q(t("Delete Custom Field?"),o);return(_,A)=>(k(),M(j,null,[a(W,{title:e(t)("Custom Fields")},{info:r(()=>[b("p",te,u(e(t)("Create custom fields to store extra metadata about each media file uploaded to your station libraries.")),1)]),actions:r(()=>[a(J,{text:e(t)("Add Custom Field"),onClick:e(p)},null,8,["text","onClick"])]),default:r(()=>[a(H,{id:"custom_fields",ref_key:"$dataTable",ref:i,fields:s,"show-toolbar":!1,"api-url":e(d)},{"cell(name)":r(n=>[D(u(n.item.name)+" ",1),b("code",null,u(n.item.short_name),1)]),"cell(actions)":r(n=>[b("div",se,[b("button",{type:"button",class:"btn btn-primary",onClick:h=>e(f)(n.item.links.self)},u(e(t)("Edit")),9,oe),b("button",{type:"button",class:"btn btn-danger",onClick:h=>e(g)(n.item.links.self)},u(e(t)("Delete")),9,ae)])]),_:1},8,["api-url"])]),_:1},8,["title"]),a(ee,{ref_key:"$editModal",ref:l,"create-url":e(d),"auto-assign-types":_.autoAssignTypes,onRelist:e(o)},null,8,["create-url","auto-assign-types","onRelist"])],64))}});export{Se as default};
